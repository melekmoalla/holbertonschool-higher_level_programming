using ``matrix_divided``
-----------------------

First import ``matrix_divided``

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> div = "string"
>>> result = matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: div must be a number

>>> result = matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [["a", 2, 3],[4, 5, 6]]
>>> result = matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3],[4, 6]]
>>> result = matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> div = float("inf")
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> print(matrix_divided(matrix, div))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
